---
- name: Check for env file
  stat:
    path: '{{ apm_agent_home }}/bin/.env'
  register: vault_env_conf_file
  become: yes
  become_user: wwwadm

- name: Make a backup of the env file
  copy:
    src: '{{ apm_agent_home }}/bin/.env'
    dest: '{{ apm_agent_home }}/bin/.bak'
    remote_src: yes
  become: yes
  become_user: wwwadm
  when: vault_env_conf_file.stat.exists
  diff: no

- name: Get current token (to revoke later)
  shell: cat {{ apm_agent_home }}/bin/.env | grep VAULT_TOKEN | awk -F '"' '{print $2}' 
  register: previous_token
  when: vault_env_conf_file.stat.exists
  become: yes
  become_user: wwwadm
  check_mode: no
  no_log: True

- name: Get wrapped token
  uri:
    url: '{{ vault_addr }}/v1/auth/vs_apps_approle/role/{{ vault_approle }}/secret-id'
    method: POST
    headers:
      X-Vault-Token: '{{ vault_broker_token }}'
      X-Vault-Wrap-Ttl: 120s
    body_format: json
    return_content: yes
    status_code: 200
  register: wrapped_response
  when: not ansible_check_mode
  no_log: True
  delegate_to: localhost
  tags:
  - molecule-notest

- name: Get secret-id
  uri:
    url: '{{ vault_addr }}/v1/sys/wrapping/unwrap'
    method: POST
    headers:
      X-Vault-Token: '{{ wrapped_response.json.wrap_info.token }}'
    body_format: json
    return_content: yes
    status_code: 200
  register: secret_id
  when: not ansible_check_mode
  no_log: True
  delegate_to: localhost
  tags:
  - molecule-notest

- name: Get token
  uri:
    url: '{{ vault_addr }}/v1/auth/vs_apps_approle/login'
    method: POST
    body_format: json
    body: '{ "role_id": "{{ role_id }}", "secret_id": "{{ secret_id.json.data.secret_id }}" }'
    return_content: yes
    status_code: 200
  register: approle_token
  when: not ansible_check_mode
  no_log: True
  delegate_to: localhost
  tags:
  - molecule-notest

- name: Set token variable
  set_fact:
    vault_token: '{{ approle_token.json.auth.client_token }}'
  when: not ansible_check_mode
  no_log: True
  delegate_to: localhost
  tags:
  - molecule-notest

- name: Check token variable
  assert:
    that:
      - vault_token | default('') | length > 0 
    msg: 'Vault token variable must not be empty'
  when: not ansible_check_mode
  delegate_to: localhost

- name: .env and wrapper files
  template:
    src: 'templates/bin/{{ item }}'
    dest: '{{ apm_agent_home }}/bin/{{ item }}'
    mode: '0775'
  loop:
    - .env
    - fluentbitw
  become: yes
  become_user: wwwadm
  when: not ansible_check_mode
  diff: no

- name: Service run script
  file:
    src: '{{ apm_agent_home }}/bin/fluentbitw'
    dest: '{{ apm_agent.service_dir }}/run'
    mode: '0775'
    state: link
    force: yes
  become: yes
  become_user: wwwadm
  
- name: Register fluent bit
  shell: '/sw_ux/s6/bin/s6-svscanctl -an /apps_ux/s6_services'
  become: yes
  become_user: wwwsvr
  tags:
  - molecule-notest

- name: Check previous token variable
  assert:
    that:
      - previous_token.stdout | default('') | length > 0 
    msg: 'Vault token variable must not be empty'
  when: vault_env_conf_file.stat.exists
  delegate_to: localhost
  tags:
  - molecule-notest

- name: Revoke previous token
  uri:
    url: '{{ vault_addr }}/v1/auth/token/revoke-self'
    method: POST
    headers:
      X-Vault-Token: '{{ previous_token.stdout }}'
    status_code: 204
  register: revoke_response
  when: previous_token.stdout | default('') | length > 0
  no_log: True
  ignore_errors: True
  delegate_to: localhost
  tags:
  - molecule-notest